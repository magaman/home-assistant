blueprint:
  name: "Bug Zapper - Flexible Schedule with Rain Check (v2.0)"
  description: >
    ðŸ“¦ Version: 2.0.0
    Runs the bug zapper on a flexible schedule. Pick either a fixed time or
    sun event (sunrise, sunset, dawn or dusk) to turn it on and choose another
    time or sun event to turn it offâ€”you can mix and match. Includes a rain
    check that pauses the zapper while raining and resumes once the weather
    clears.
  domain: automation
  input:
    zapper_switch:
      name: Bug Zapper Switch
      selector:
        entity:
          domain: switch
    weather_sensor:
      name: Weather Condition Sensor
      selector:
        entity:
          domain: sensor
    rain_hold_helper:
      name: Rain Hold Input Boolean
      selector:
        entity:
          domain: input_boolean
    on_event:
      name: Turn On Trigger
      description: Event that turns the zapper on
      default: time
      selector:
        select:
          options:
            - time
            - sunrise
            - sunset
            - dawn
            - dusk
    on_time:
      name: On Time
      description: Time of day if the on trigger is "time"
      default: "12:00:00"
      selector:
        time: {}
    off_event:
      name: Turn Off Trigger
      description: Event that turns the zapper off
      default: sunrise
      selector:
        select:
          options:
            - time
            - sunrise
            - sunset
            - dawn
            - dusk
    off_time:
      name: Off Time
      description: Time of day if the off trigger is "time"
      default: "06:00:00"
      selector:
        time: {}

mode: single

variables:
  on_event: !input on_event
  off_event: !input off_event
  off_time: !input off_time

trigger:
  - platform: time
    at: !input on_time
    id: on_time
  - platform: sun
    event: sunrise
    id: on_sunrise
  - platform: sun
    event: sunset
    id: on_sunset
  - platform: sun
    event: dawn
    id: on_dawn
  - platform: sun
    event: dusk
    id: on_dusk
  - platform: time
    at: !input off_time
    id: off_time
  - platform: sun
    event: sunrise
    id: off_sunrise
  - platform: sun
    event: sunset
    id: off_sunset
  - platform: sun
    event: dawn
    id: off_dawn
  - platform: sun
    event: dusk
    id: off_dusk
  - platform: state
    entity_id: !input weather_sensor
    from: "rainy"
    id: rain_stopped
  - platform: state
    entity_id: !input weather_sensor
    to: "rainy"
    id: rain_started

condition: []

action:
  - choose:
      - alias: Turn On
        conditions:
          - condition: template
            value_template: >-
              {{
                (trigger.id == 'on_time' and on_event == 'time') or
                (trigger.id == 'on_' + on_event)
              }}
          - condition: not
            conditions:
              - condition: state
                entity_id: !input weather_sensor
                state: "rainy"
        sequence:
          - service: switch.turn_on
            target:
              entity_id: !input zapper_switch
          - service: input_boolean.turn_off
            target:
              entity_id: !input rain_hold_helper
      - alias: Start Rainy
        conditions:
          - condition: template
            value_template: >-
              {{
                (trigger.id == 'on_time' and on_event == 'time') or
                (trigger.id == 'on_' + on_event)
              }}
          - condition: state
            entity_id: !input weather_sensor
            state: "rainy"
        sequence:
          - service: input_boolean.turn_on
            target:
              entity_id: !input rain_hold_helper
      - alias: Resume After Rain
        conditions:
          - condition: trigger
            id: rain_stopped
          - condition: state
            entity_id: !input rain_hold_helper
            state: "on"
          - condition: template
            value_template: >-
              {% if off_event == 'time' %}
                {{ now() < today_at(off_time) }}
              {% else %}
                {{ now() < as_local(state_attr('sun.sun', 'next_' ~ off_event)) }}
              {% endif %}
        sequence:
          - service: switch.turn_on
            target:
              entity_id: !input zapper_switch
          - service: input_boolean.turn_off
            target:
              entity_id: !input rain_hold_helper
      - alias: Rain Started
        conditions:
          - condition: trigger
            id: rain_started
          - condition: state
            entity_id: !input zapper_switch
            state: "on"
        sequence:
          - service: switch.turn_off
            target:
              entity_id: !input zapper_switch
          - service: input_boolean.turn_on
            target:
              entity_id: !input rain_hold_helper
      - alias: Turn Off
        conditions:
          - condition: template
            value_template: >-
              {{
                (trigger.id == 'off_time' and off_event == 'time') or
                (trigger.id == 'off_' + off_event)
              }}
          - condition: state
            entity_id: !input zapper_switch
            state: "on"
        sequence:
          - service: switch.turn_off
            target:
              entity_id: !input zapper_switch
          - service: input_boolean.turn_off
            target:
              entity_id: !input rain_hold_helper
